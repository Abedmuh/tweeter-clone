{
	"info": {
		"_postman_id": "d035a5f8-5020-4008-89a1-4c0d6a0d3e9b",
		"name": "Social Media",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17345135"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Link",
					"item": [
						{
							"name": "Update email",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessTokenJohn}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"nanda@nanda.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/v1/user/link",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v1",
										"user",
										"link"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update phone",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "headerPrefix",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"phone\": \"+18923773\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/v1/user/link/phone",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v1",
										"user",
										"link",
										"phone"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "John",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"idjohn\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"credentialType\": \"phone\", // not null, should in enum\r\n\t\"credentialValue\": \"+72637172635\", // not null\r\n\t\"name\": \"Johnathanjess\", // not null, minLength 5, maxLength 50, name can be duplicate with others\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Doe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"iddoe\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"credentialType\": \"email\", // not null, should in enum\r\n\t\"credentialValue\": \"doejohnan@gmail.com\", // not null\r\n\t\"name\": \"Djohannes\", // not null, minLength 5, maxLength 50, name can be duplicate with others\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login John",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"accessTokenJohn\", jsonData.data.accessToken);\r",
									"\r",
									"pm.test('it should response 201 status code', () => {\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"credentialType\": \"phone\", // not null, should in enum\r\n\t\"credentialValues\": \"+72637172635\", // not null\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Doe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"accessTokenDoe\", jsonData.data.accessToken);\r",
									"\r",
									"pm.test('it should response 201 status code', () => {\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"credentialType\": \"email\", // not null, should in enum\r\n\t\"credentialValues\": \"doejohnan@gmail.com\", // not null\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "John",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"namadepan namabelakang\", // not null, minLength 5, maxLength 50\r\n\t\"imageUrl\": \"http://image.jpg\" // not null, should in url format\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Friend",
			"item": [
				{
					"name": "Doe",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"userId\": \"{{iddoe}}\" // not null, should be a valid user id\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/friend",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"friend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Friend Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/v1/friend",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"friend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Friend",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"userId\": \"{{iddoe}}\" // not null, should be a valid user id\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/friend",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"friend"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post",
			"item": [
				{
					"name": "Post John",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"postidjohn\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"postInHtml\": \"this is initial\", // not null, minLength 2, maxLength 500, no need to validate this for HTML\r\n\t\"tags\": [\"tag2\", \"tags3\", \"tags4\"] // not null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/post",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Post John",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/v1/post/{{idjohn}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post",
								"{{idjohn}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/v1/post",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/v1/post/user/{{postidjohn}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post",
								"user",
								"{{postidjohn}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post John Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"postInHtml\": \"ini update postnya\", // not null, minLength 2, maxLength 500, no need to validate this for HTML\r\n\t\"tags\": [\"tag2\", \"tags3\", \"tags213\"] // not null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/post/{{postidjohn}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post",
								"{{postidjohn}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "john",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenDoe}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"postInHtml\": \"ini update postnya\", // not null, minLength 2, maxLength 500, no need to validate this for HTML\r\n\t\"tags\": [\"tag2\", \"tags3\", \"tags213\"] // not null\r\n    //INI DELETE POST TAPI ENV NYA MASIH PAKE ID INI KLO BISA JANGAN DI DELETE DULU SEBELUM MENCOBA COMMENT\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/post/{{postidjohn}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post",
								"{{postidjohn}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "Comment Post John as Doe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"commentidjohn\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"comment\": \"nah this is wild\" // not null, minLength 2, maxLength 500\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/v1/post/{{postidjohn}}/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post",
								"{{postidjohn}}",
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Comment Post John as Doe Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/v1/post/comment/{{commentidjohn}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"v1",
								"post",
								"comment",
								"{{commentidjohn}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Upload Image",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessTokenJohn}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/E:/vector-curriculum-vitae.jpg"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/v1/image",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"v1",
						"image"
					]
				}
			},
			"response": []
		}
	]
}